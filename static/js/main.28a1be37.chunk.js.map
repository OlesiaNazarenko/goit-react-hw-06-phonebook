{"version":3,"sources":["App.module.css","components/filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/contactList/ContactList.jsx","components/filter/Filter.jsx","components/contactForm/ContactForm.jsx","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css"],"names":["module","exports","add_contact","createAction","name","number","payload","id","shortid","generate","delete_contact","search_contact","getContacts","state","contacts","getFilter","filter","getVisibleContacts","filters","contact","toLowerCase","includes","toast","configure","ContactList","data","useSelector","dispatch","useDispatch","className","s","map","ContactListItem","ContactListSpan","btnDelete","type","onClick","autoClose","transition","Zoom","Filter","seacrhInput","placeholder","value","onChange","e","target","ContactForm","useState","setName","setNumber","handleChange","onSubmit","preventDefault","warn","Bounce","contactsForm","label","input","autoComplete","pattern","title","required","contactsFormBtn","App","mainDiv","createReducer","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.28a1be37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"App_mainDiv__r-yCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"seacrhInput\":\"Filter_seacrhInput__2hI0G\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\nexport const add_contact = createAction(\r\n  'contacts/ADD_CONTACT',\r\n  ({ name, number }) => ({\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    },\r\n  }),\r\n);\r\nexport const delete_contact = createAction('contacts/DELETE_CONTACT');\r\nexport const search_contact = createAction('contacts/SEARCH_CONTACT');\r\n","export const getContacts = state => state.contacts;\r\nexport const getFilter = state => state.filter;\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state.contacts);\r\n  const filters = state.contacts.filter;\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filters.toLowerCase()),\r\n  );\r\n};\r\n","import s from './ContactList.module.css';\r\nimport { toast, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { delete_contact } from '../../redux/contacts/contacts-actions.js';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors.js';\r\ntoast.configure();\r\nfunction ContactList() {\r\n  const data = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <ul className={s.ContactList}>\r\n      {data.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.ContactListItem}>\r\n            <span className={s.ContactListSpan}>{name}</span>\r\n            <span className={s.ContactListSpan}>{number}</span>\r\n            <button\r\n              key={id}\r\n              className={s.btnDelete}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                dispatch(delete_contact(id));\r\n                toast('Deleted', { autoClose: 3000, transition: Zoom });\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors.js';\r\nimport { search_contact } from '../../redux/contacts/contacts-actions.js';\r\nimport s from './Filter.module.css';\r\nfunction Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const handleOnChange = e => {\r\n    dispatch(search_contact(e.target.value));\r\n  };\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        className={s.seacrhInput}\r\n        type=\"text\"\r\n        placeholder=\"Enter a name\"\r\n        value={filter}\r\n        onChange={handleOnChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport { toast, Bounce } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from 'components/contactForm/ContactForm.module.css';\r\nimport { add_contact } from '../../redux/contacts/contacts-actions.js';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors.js';\r\ntoast.configure();\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    contacts.contacts.map(contact => contact.name).includes(name)\r\n      ? toast.warn(`${name} is already in your phonebook`, {\r\n          transition: Bounce,\r\n        })\r\n      : dispatch(add_contact({ name, number }));\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.contactsForm}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.contactsFormBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport s from './App.module.css';\r\nimport ContactList from './components/contactList/ContactList';\r\nimport Filter from './components/filter/Filter';\r\nimport ContactForm from './components/contactForm/ContactForm';\r\nimport { getFilter } from './redux/contacts/contacts-selectors';\r\nfunction App() {\r\n  return (\r\n    <div className={s.mainDiv}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter value={getFilter} />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  add_contact,\r\n  delete_contact,\r\n  search_contact,\r\n} from './contacts-actions';\r\nconst contacts = createReducer([], {\r\n  [add_contact]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [delete_contact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [search_contact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport reducer from './contacts/contacts-reducers.js';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nconst persistConfig = {\r\n  key: 'phonebook',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, reducer),\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({ serializableCheck: false }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nconst persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n    ;\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__1NbK4\",\"label\":\"ContactForm_label__2WU1C\",\"input\":\"ContactForm_input__zWsFX\",\"contactsFormBtn\":\"ContactForm_contactsFormBtn__1XuA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactList_btnDelete__1jGNY\",\"ContactListSpan\":\"ContactList_ContactListSpan__3pxh5\",\"ContactList\":\"ContactList_ContactList__VT2PM\",\"ContactListItem\":\"ContactList_ContactListItem__1MO63\"};"],"sourceRoot":""}